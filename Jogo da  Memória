// Componentes:
// Amanda Rigaud
// Emanuele Santana
// Matheus Bomfim
// Paloma Amancio

// Trabalho: Jogo da memória
//  ILP 2020.1
//  Docente: Márcio Soussa


// Todas as bibliotecas necessárias para fazer um jogo da memória 

#include <stdio.h> //Esta biblioteca é para o tratamento de entrada e saída de dados
#include <time.h> // Esta biblioteca serviu para manipular o temporizador
#include <windows.h> // Esta biblioteca é específica para rodar no windows
#include <locale.h> // Esta biblioteca foi utilizada para acentuação e colocar o código em português
#include <conio.h> //Esta biblioteca foi utilizada para manipulação de caracteres
#include <stdlib.h> // Esta bilioteca foi utilizada para conversão de string, e limpar a tela
#include <ctype.h> // Esta biblioteca serviu para classificamos os caracteres 
#include <string.h> //Está biblioteca contém uma série de função para manipular strings

typedef struct {     // definição da estrutura de uma carta
   		
		int acertou;
		int par;
		char *posicao;
		char elemento;
		   	
}carta;

carta barralho[16];

// Tabuleiro

char CARTAS [56] [56] = {{'0', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '2', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '3', 219, 219, 219, 219, 219, 219, 219, 219, 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {'4', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '5', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '6', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '7', 219, 219, 219, 219, 219, 219, 219, 219, 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
                          {219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {'8', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '9', 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', '0', 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', '1', 219, 219, 219, 219, 219, 219, 219, 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219},
						              {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
                          {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '},
						              {'1', '2', 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', '3', 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', '4', 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', '1', '5', 219, 219, 219, 219, 219, 219, 219, 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', 219, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 219},
						              {219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, ' ', ' ', ' ', ' ', ' ', 219, 219, 219, 219, 219, 219, 219, 219, 219, 219}};


void printarcartas(int cond){        
	
	if(cond == 1){
		// Código usado para imprimir o tabuleiro
		for(int i = 0; i < 56; i++) {
			for (int j = 0; j <56; j++) {
	   			printf ("%c", CARTAS[i][j]);
			} 
			printf ("\n");
		}
		printf ("\n");
		
	}else if(cond == 2){
		
		// imprimir cartas mostrando os elementos
		for(int k = 0; k < 16; k++){
			*(barralho[k].posicao) = barralho[k].elemento; 
		}
		
		for(int i = 0; i < 56; i++) {
			for (int j = 0; j <56; j++) {
	   			printf ("%c", CARTAS[i][j]);
			} 
			printf ("\n");
		}
		printf ("\n");
		
		for(int l = 0; l < 16; l++){
			*(barralho[l].posicao) = ' '; 
		}
	}
		
}

void printaEscolhas(int posi1, int posi2, int cond){      
	int s;
	
	setlocale(LC_ALL,"Portuguese");
	
	*(barralho[posi1].posicao) = barralho[posi1].elemento;
	*(barralho[posi2].posicao) = barralho[posi2].elemento;
	
	printf("Cartas escolhidas: %d e %d.\n \n", posi1, posi2);
	// Cartas escolhidas pelo jogador e que serão printadas em tela 
	for(int i = 0; i < 56; i++) {
		for (int j = 0; j <56; j++) {
	   		printf ("%c", CARTAS[i][j]);
		} 
		printf ("\n");
	}
	
	printf ("\n");
	
	if(cond == 0){
		printf("Parabéns, você acertou!\n");
		printf("Aperte enter para continuar.\n");
		printf("\n");
		getch();
		system("cls");
			
	}else if(cond == 1){
		
		printf("Carta errada!\n");
		// A carta que estiver incorreta, o elemento irá desaparecer imediatamente 
		*(barralho[posi1].posicao) = ' ';
		*(barralho[posi2].posicao) = ' ';
		
		s = 3;
		printf("O tabuleiro irá sumir em: ");
		
		do{
			printf("%d ", s);
			s--;
			Sleep(1000);
		}while(s>0);
			system("cls");
		
	}
		
}
	
	
void definirCartas(){     // Acontece o sorteio dos elementos e definição da posição de cada carta
	int ind = 0, z;
	int sorteados[16];
	char tab_oc[16] = {'B', 'B', 'C', 'C', 'H', 'H', 'N', 'N', 'O', 'O', 'P', 'P', 'F', 'F', 'W', 'W'};
	
	barralho[0].posicao = &CARTAS[4][4];
	barralho[0].acertou = 1;
	
	barralho[1].posicao = &CARTAS[4][19];
	barralho[1].acertou = 1;
	
	barralho[2].posicao = &CARTAS[4][34];
	barralho[2].acertou = 1;
	
	barralho[3].posicao = &CARTAS[4][49];
	barralho[3].acertou = 1;
	
	barralho[4].posicao = &CARTAS[19][4];
	barralho[4].acertou = 1;
	
	barralho[5].posicao = &CARTAS[19][19];
	barralho[5].acertou = 1;
	
	barralho[6].posicao = &CARTAS[19][34];
	barralho[6].acertou = 1;
	
	barralho[7].posicao = &CARTAS[19][49];
	barralho[7].acertou = 1;
	
	barralho[8].posicao = &CARTAS[34][4];
	barralho[8].acertou = 1;
	
	barralho[9].posicao = &CARTAS[34][19];
	barralho[9].acertou = 1;
	
	barralho[10].posicao = &CARTAS[34][34];
	barralho[10].acertou = 1;
	
	barralho[11].posicao = &CARTAS[34][49];
	barralho[11].acertou = 1;
	
	barralho[12].posicao = &CARTAS[49][4];
	barralho[12].acertou = 1;
	
	barralho[13].posicao = &CARTAS[49][19];
	barralho[13].acertou = 1;
	
	barralho[14].posicao = &CARTAS[49][34];
	barralho[14].acertou = 1;
	
	barralho[15].posicao = &CARTAS[49][49];
	barralho[15].acertou = 1;
	
	for(int m = 0; m < 16; m++){
		sorteados[m] = 20;
	}
	// Sorteio das cartas
	for(int i = 0; i < 16; i++){
		
		srand(time(NULL));
		z = rand()%16;
		
		for(int j = 0; j < 16; j++){
			if (sorteados[j] == z){ 
				z = rand()%16;
				j = -1;
			} else if(sorteados[j] == 20){
				break;
			}
		}
		
		sorteados[i] = z;
		barralho[i].elemento = tab_oc[z];
	}
	// Mostrar que cada carta tem um par 
	for(int k = 0; k < 17; k++){
		
		for(int w = 0; w < 17; w++){
			
			if(barralho[k].elemento == barralho[w].elemento){
				barralho[k].par = w;
				barralho[w].par = k;
			}
			
		}
		
	}

}

int checarFim(int pp1, int pp2, char N_J1[10], char N_J2[10]){
	// Checar a pontuação e quem venceu o jogo 
	for(int i = 0; i < 16; i++){
		if(barralho[1].acertou == 1) return 1;
	}
	
	if(pp1 == pp2) printf("Vocês empataram!\n");
	else if(pp1 > pp2)  printf("Jogador %s venceu!!!\n", N_J1);
	else printf("Jogador %s venceu!!!\n", N_J2);
  
  return 0;
}

int Jogo_Memoria(void){
	char N_J1[11];
	char N_J2[11];
	int x, s, z;	
	int pp1 = 0, pp2 = 0;
	int posi1 = 0, posi2 = 2;
	
// Momento que os jogadores colocarão os seus nomes
 	printf("Nickname jogador 1: \n");
   	scanf (" %[^\n]s\n", &N_J1);
   	printf("Nickname jogador 2: \n");
   	scanf (" %[^\n]s\n", &N_J2);
	 

	printf("Você terá 5 segundos para memorizar as cartas.\n");
	printarcartas(2);
	
	s = 5;
	printf("As cartas vão sumir em: ");

	do{
		printf("%d ", s);
		s--;
		Sleep(1000);
	}while(s>0);
		system("cls");
			 	
	for(int g = 1; g < 100; g++){
	// Jogador irá escolher as posições das cartas que ele deseja	
        if(g%2==0){
        	
        	printarcartas(1);
        	// Decisão das partidas 
            printf("Vez do jogador %s!\n", N_J1);
            printf("Digite a posição da primeira carta: ");
    			scanf("%d", &posi1);
    			printf("\n");
    		printf("Digite a posição da segunda carta: ");
    			scanf("%d", &posi2);
    			printf("\n");
    			system("cls");
    		if(barralho[posi1].acertou ==0 || barralho[posi2].acertou ==0){		// caso o jogador escolha uma carta que ja encontrou o par , pedira as cartas novamente
    					printarcartas(1);
            	printf("Vez do jogador %s!\n", N_J1);
           		printf("Digite a posição da primeira carta: ");
    				scanf("%d", &posi1);
    				printf("\n");
    			printf("Digite a posição da segunda carta: ");
    				scanf("%d", &posi2);
    				printf("\n");
    				system("cls");
			}
    		
    		if(barralho[posi1].elemento == barralho[posi2].elemento){ // Se o jogador acertar, as duas cartas ficam a amostra
    			printaEscolhas(posi1, posi2, 0);
    			barralho[posi1].acertou = 0;      // Quando o jogador acerta, troca o baralho para zero
    			barralho[posi2].acertou = 0;
    			pp1++;
    			g--;
    			
			}else printaEscolhas(posi1, posi2, 1);
    		
        }else{
        	
        	printarcartas(1);
        	
           	printf("Vez do jogador %s!\n", N_J2);
            printf("Digite a posição da primeira carta: ");
    			scanf("%d", &posi1);
    			printf("\n");
    		printf("Digite a posição da segunda carta: ");
    			scanf("%d", &posi2);
    			printf("\n");
    			system("cls");
    			
    	if(barralho[posi1].acertou ==0 || barralho[posi2].acertou ==0){	
			
    		printarcartas(1);
            printf("Vez do jogador %s!\n", N_J2);
           	printf("Digite a posição da primeira carta: ");
    			scanf("%d", &posi1);
    			printf("\n");
    		printf("Digite a posição da segunda carta: ");
    			scanf("%d", &posi2);
    			printf("\n");
    			system("cls");
			}
    		
    		if(barralho[posi1].elemento == barralho[posi2].elemento){
    			printaEscolhas(posi1, posi2, 0);
    			barralho[posi1].acertou = 0;
    			barralho[posi2].acertou = 0;
    			pp2++;
    			g--;
    			
			}else printaEscolhas(posi1, posi2, 1);
			
        }
        
        x = checarFim(pp1, pp2, N_J1, N_J2);
        
        if(x == 0) break;
        
    }
        
}



int main (){
	setlocale(LC_ALL,"Portuguese");
	int OPC;
	
// Menu do jogo 
	printf("Tema do jogo: Elementos Químicos\n");
		printf("\n");
		printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
	printf("Regras do Jogo da Memória\n");
    printf("Só pode 2 participantes por rodada\n");
    printf("O primeiro a jogar será sempre o jogador 1\n");
    printf("Os jogadores vão ter 5 minutos para memorizar as cartas, caso encontre o par correto, recolhe as cartas, e tem direito a mais uma jogada.\n");
    printf("Se não selecionar o par errado, o outro jogador que irá jogar, e as cartas viram novamente.\n");
	printf("O jogador que tiver mais cartas ganha\n");
        printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
    printf("COMO JOGAR?\n");  // Instruções
    printf("1-O jogo da memória irá misturar e distribuir as cartas sobre um tabuleiro, com os desenhos virados para o tabuleiro.\n");
    printf("2-Haverá um sorteio para ver qual jogador irá jogar primeiro.");
    printf("3-Os jogadores terão 5 segundos para memoriza a localização das cartas.\n");
    printf("4-Cada jogador irá virar duas cartas, buscando um par igual.\n");
    printf("5-Se o jogador conseguir achar o par certo, terá direito a mais uma jogada.\n");
    printf("6- As cartas estão identificadas a partir dos números no canto superior esquerdo. \n");
    printf("6-No caso do jogador, ao virar duas cartas e seus desenhos não se corresponderem, passa a vez para o outro jogador.\n");
    printf("7-As cartas que formarem par devem ser retiradas do jogo, contando ponto para o jogador que achou.\n");
    printf("8-Ganhará o jogo quem tiver maior quantidades de cartas.\n");
	    printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
        printf("\n");
// Momento da decisão(se irá jogar ou não)
    printf("Digite 1 para continuar o jogo...\n");
	printf("Digite 2 para sair...\n");
	   scanf("%d", & OPC);
	
// Essa opção é para a pessoa sair do jogo
	switch(OPC){
	
		case 2:{
			printf("O programa foi fechado!\n");
			system("cls");	// Essa função é para limpar tela
			return 0;
		}
		case 1:{			// chamando as funções que fazem o jogo acontecer 
			definirCartas();     	
			Jogo_Memoria();	
			break; 
		}
	}

return 0;
}
